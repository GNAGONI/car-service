import { createActions } from 'redux-actions';

import UserTypes from '../action-types/user';

export const {
  authenticate,
  userLoginRequest,
  userLoginSuccess,
  userLoginError,
  refreshTokenRequest,
  refreshTokenSuccess,
  refreshTokenError,
  getUserDataRequest,
  getUserDataSuccess,
  getUserDataError,
  userLogoutRequest,
  userLogoutSuccess,
  userLogoutError,
  userSignupRequest,
  userSignupSuccess,
  userSignupError,
  setEmail,
  setFirstName,
  setLastName,
  setPhoneNumber,
  setConfirmationValue,
  watchUserChannelProgress,
  watchUserChannelFinish,
  changePasswordRequest,
  changePasswordSuccess,
  changePasswordError,
  forgotPasswordRequest,
  forgotPasswordSuccess,
  forgotPasswordError,
  resetPasswordRequest,
  resetPasswordSuccess,
  resetPasswordError,
  editProfileRequest,
  editProfileSuccess,
  editProfileError,
  deleteAccountRequest,
  deleteAccountSuccess,
  deleteAccountError,
  personalDataRequest,
  personalDataSuccess,
  personalDataError,
} = createActions({
  [UserTypes.AUTHENTICATE]: data => data,
  [UserTypes.USER_LOGIN.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.USER_LOGIN.SUCCESS]: data => data,
  [UserTypes.USER_LOGIN.ERROR]: error => error,
  [UserTypes.REFRESH_TOKEN.REQUEST]: () => {},
  [UserTypes.REFRESH_TOKEN.SUCCESS]: data => data,
  [UserTypes.REFRESH_TOKEN.ERROR]: error => error,
  [UserTypes.GET_USER_DATA.REQUEST]: () => {},
  [UserTypes.GET_USER_DATA.SUCCESS]: data => data,
  [UserTypes.GET_USER_DATA.ERROR]: error => error,
  [UserTypes.USER_LOGOUT.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.USER_LOGOUT.SUCCESS]: data => data,
  [UserTypes.USER_LOGOUT.ERROR]: error => error,
  [UserTypes.USER_SIGNUP.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.USER_SIGNUP.SUCCESS]: data => data,
  [UserTypes.USER_SIGNUP.ERROR]: error => error,
  [UserTypes.SET_EMAIL]: email => ({ email }),
  [UserTypes.SET_FIRST_NAME]: firstName => ({ firstName }),
  [UserTypes.SET_LAST_NAME]: lastName => ({ lastName }),
  [UserTypes.SET_PHONE_NUMBER]: phoneNumber => ({ phoneNumber }),
  [UserTypes.SET_CONFIRMATION_VALUE]: confirmationValue => ({ confirmationValue }),
  [UserTypes.WATCH_USER_CHANNEL.PROGRESS]: () => {},
  [UserTypes.WATCH_USER_CHANNEL.FINISH]: () => {},
  [UserTypes.CHANGE_PASSWORD.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.CHANGE_PASSWORD.SUCCESS]: data => data,
  [UserTypes.CHANGE_PASSWORD.ERROR]: error => error,
  [UserTypes.FORGOT_PASSWORD.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.FORGOT_PASSWORD.SUCCESS]: () => {},
  [UserTypes.FORGOT_PASSWORD.ERROR]: error => error,
  [UserTypes.RESET_PASSWORD.REQUEST]: (data, actions, redirect) => ({ data, actions, redirect }),
  [UserTypes.RESET_PASSWORD.SUCCESS]: data => data,
  [UserTypes.RESET_PASSWORD.ERROR]: error => error,
  [UserTypes.EDIT_PROFILE.REQUEST]: (data, actions) => ({ data, actions }),
  [UserTypes.EDIT_PROFILE.SUCCESS]: () => {},
  [UserTypes.EDIT_PROFILE.ERROR]: error => error,
  [UserTypes.DELETE_ACCOUNT.REQUEST]: data => data,
  [UserTypes.DELETE_ACCOUNT.SUCCESS]: data => data,
  [UserTypes.DELETE_ACCOUNT.ERROR]: error => error,
  [UserTypes.PERSONAL_DATA.REQUEST]: data => data,
  [UserTypes.PERSONAL_DATA.SUCCESS]: () => {},
  [UserTypes.PERSONAL_DATA.ERROR]: error => error,
});
