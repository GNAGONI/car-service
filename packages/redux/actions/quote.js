import { createActions } from 'redux-actions';
import QuoteTypes from '../action-types/quote';

export const {
  getQuotePriceRequest,
  getQuoteByTokenRequest,
  getAddressesByPostcodeRequest,
  getAddressesByPostcodeSuccess,
  getAddressesByPostcodeError,
} = createActions({
  [QuoteTypes.GET_QUOTE_PRICE.REQUEST]: payload => payload,
  [QuoteTypes.GET_QUOTE_BY_TOKEN.REQUEST]: payload => payload,
  [QuoteTypes.GET_ADDRESSES_BY_POSTCODE.REQUEST]: () => {},
  [QuoteTypes.GET_ADDRESSES_BY_POSTCODE.SUCCESS]: payload => payload,
  [QuoteTypes.GET_ADDRESSES_BY_POSTCODE.ERROR]: payload => payload,
});

export const {
  createQuoteRequest,
  createQuoteSuccess,
  createQuoteError,
  handleQuoteForbiddenStatus,
  handleQuoteUnauthorizedStatus,
  enterDetailsRequest,
  enterDetailsSuccess,
  enterDetailsError,
  setOnlineQuote,
  arrangeCollectionRequest,
  arrangeCollectionSuccess,
  arrangeCollectionError,
  setPaymentMethodRequest,
  setPaymentMethodSuccess,
  setPaymentMethodError,
  cancelQuote,
  completeArrangeCollection,
  dropQuote,
  continueWithQuoteRequest,
  continueWithQuoteSuccess,
  continueWithQuoteError,
  setManualAddress,
} = createActions({
  [QuoteTypes.CREATE_QUOTE.REQUEST]: payload => payload,
  [QuoteTypes.CREATE_QUOTE.SUCCESS]: payload => payload,
  [QuoteTypes.CREATE_QUOTE.ERROR]: payload => payload,
  [QuoteTypes.HANDLE_QUOTE_FORBIDDEN_STATUS.actionName]: () => {},
  [QuoteTypes.HANDLE_QUOTE_UNAUTHORIZED_STATUS.actionName]: () => {},
  [QuoteTypes.ENTER_DETAILS.REQUEST]: payload => payload,
  [QuoteTypes.ENTER_DETAILS.SUCCESS]: payload => payload,
  [QuoteTypes.ENTER_DETAILS.ERROR]: payload => payload,
  [QuoteTypes.SET_ONLINE_QUOTE.actionName]: payload => payload,
  [QuoteTypes.ARRANGE_COLLECTION.REQUEST]: payload => payload,
  [QuoteTypes.ARRANGE_COLLECTION.SUCCESS]: payload => payload,
  [QuoteTypes.ARRANGE_COLLECTION.ERROR]: payload => payload,
  [QuoteTypes.SET_PAYMENT_METHOD.REQUEST]: payload => payload,
  [QuoteTypes.SET_PAYMENT_METHOD.SUCCESS]: payload => payload,
  [QuoteTypes.SET_PAYMENT_METHOD.ERROR]: payload => payload,
  [QuoteTypes.CANCEL_QUOTE.actionName]: payload => payload,
  [QuoteTypes.COMPLETE_ARRANGE_COLLECTION.actionName]: () => {},
  [QuoteTypes.DROP_QUOTE.actionName]: () => {},
  [QuoteTypes.CONTINUE_WITH_QUOTE.REQUEST]: payload => payload,
  [QuoteTypes.CONTINUE_WITH_QUOTE.SUCCESS]: payload => payload,
  [QuoteTypes.CONTINUE_WITH_QUOTE.ERROR]: payload => payload,
  [QuoteTypes.SET_MANUAL_ADDRESS.actionName]: payload => payload,
});
